name: Rust

on:
  push:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  #  test:
  #    strategy:
  #      matrix:
  #        os: [ macos-latest, windows-latest, ubuntu-latest ]
  #    runs-on: ${{ matrix.os }}
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Run tests
  #        run: cargo test --verbose

  build:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install maturin
        run: |
          pip install maturin
          pip install virtualenv
          virtualenv sc2_helper_env          

      - if: matrix.os == 'windows-latest'
        run: ./sc2_helper_env/Scripts/activate.ps1
      - if: matrix.os == 'macos-latest'
        run: source sc2_helper_env/bin/activate
      - if: matrix.os == 'ubuntu-latest'
        run: source sc2_helper_env/bin/activate

      - name: Build the wheel
        run: maturin build

      - name: Upload the wheel artifact
        uses: actions/upload-artifact@v3
        with:
          name: wheel-${{ matrix.os }}
          path: target/wheels/*.whl

  release:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@master

      - uses: actions/download-artifact@v3
        with:
          name: wheel-windows-latest
          path: dist

      - uses: actions/download-artifact@v3
        with:
          name: wheel-macos-latest
          path: dist

      - uses: actions/download-artifact@v3
        with:
          name: wheel-ubuntu-latest
          path: dist

      - name: Print out the contents of dist
        run: ls -la dist

#      - name: Publish package distributions to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
